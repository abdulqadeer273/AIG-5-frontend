# Generated by Django 4.2.3 on 2023-07-31 09:42

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Case',
            },
        ),
        migrations.CreateModel(
            name='MCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('story', models.TextField()),
                ('question', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Question Category',
            },
        ),
        migrations.CreateModel(
            name='QuestionTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Question topic',
            },
        ),
        migrations.CreateModel(
            name='VariableName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('variable_code', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'variable name',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('jwt_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(default='profile_pictures/profile.png', upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('age_in', models.CharField(blank=True, choices=[('DAYS', 'DAYS'), ('MONTHS', 'MONTHS'), ('YEARS', 'YEARS'), ('WEEKS', 'WEEKS')], max_length=20, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuizApp.variablename')),
                ('var_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.case')),
            ],
            options={
                'verbose_name': 'Variable',
            },
        ),
        migrations.CreateModel(
            name='StoryText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.variablename')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('question_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.questioncategory')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('question_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.case')),
                ('question_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.questioncategory')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('isTrue', models.BooleanField(default=False)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('question_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.case')),
                ('question_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.questioncategory')),
            ],
        ),
        migrations.CreateModel(
            name='McqOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('mcq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuizApp.mcq')),
            ],
        ),
        migrations.AddField(
            model_name='mcq',
            name='questionCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.questioncategory'),
        ),
        migrations.AddField(
            model_name='mcq',
            name='questionTopic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuizApp.questiontopic'),
        ),
        migrations.AddField(
            model_name='case',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuizApp.questiontopic'),
        ),
    ]
